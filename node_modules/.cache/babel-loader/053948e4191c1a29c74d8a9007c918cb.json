{"ast":null,"code":"import axios from 'axios';\nimport { ActionTypes } from './types';\nconst url = 'https://jsonplaceholder.typicode.com/todos';\nexport const fetchTodos = () => {\n  return async dispatch => {\n    const response = await axios.get(url); // response.data is an array of objects that satisfies the Todo interface\n\n    dispatch({\n      type: ActionTypes.fetchTodos,\n      payload: response.data\n    });\n  };\n};","map":{"version":3,"names":["axios","ActionTypes","url","fetchTodos","dispatch","response","get","type","payload","data"],"sources":["C:/Users/Cristina-Elena/Desktop/typescript/rrts/src/actions/index.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { ActionTypes } from './types'\r\n\r\nexport interface Todo {\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n}\r\n\r\nexport interface FetchTodosAction {\r\n  type: ActionTypes.fetchTodos;\r\n  payload: Todo[];\r\n}\r\nconst url = 'https://jsonplaceholder.typicode.com/todos'\r\n\r\nexport const fetchTodos = () => {\r\n  return async (dispatch: Dispatch) => {\r\n    const response = await axios.get<Todo[]>(url); // response.data is an array of objects that satisfies the Todo interface\r\n\r\n    dispatch<FetchTodosAction>({\r\n      type: ActionTypes.fetchTodos,\r\n      payload: response.data\r\n    });\r\n  };\r\n};"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAYA,MAAMC,GAAG,GAAG,4CAAZ;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAC9B,OAAO,MAAOC,QAAP,IAA8B;IACnC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAkBJ,GAAlB,CAAvB,CADmC,CACY;;IAE/CE,QAAQ,CAAmB;MACzBG,IAAI,EAAEN,WAAW,CAACE,UADO;MAEzBK,OAAO,EAAEH,QAAQ,CAACI;IAFO,CAAnB,CAAR;EAID,CAPD;AAQD,CATM"},"metadata":{},"sourceType":"module"}