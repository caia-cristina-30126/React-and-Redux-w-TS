{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristina-Elena\\\\Desktop\\\\typescript\\\\rrts\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/* interface AppState {\r\n  counter: number;\r\n} */\nconst App = props => {\n  // functional component / a function actually\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.color\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }, this);\n}; //class App extends React.Component<AppProps> {\n// two ways of definind 'state':\n//1 - redefining the prop that is already set up in the class Component\n// state = { counter: 0 };  // with es25\n//2: defining the constructor\n\n/*   constructor(props: AppProps){\r\n       super(props);\r\n       this.state = { counter: 0 };\r\n   } */\n// error functions bc as event handlers, these fctn are bound\n\n/*  onIncrement = (): void => {\r\n   this.setState({ counter: this.state.counter + 1});\r\n };\r\n onDecrement = (): void => {\r\n   this.setState({ counter: this.state.counter - 1});\r\n }; */\n\n/* render() {  \r\n  return (\r\n    <div>\r\n      <button onClick = {this.onIncrement}>increment</button>\r\n      <button onClick = {this.onDecrement}>decrement</button>\r\n      {this.state.counter} \r\n    </div>\r\n  )\r\n}  */\n//}\n\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this), document.querySelector('#root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","App","props","color","render","document","querySelector"],"sources":["C:/Users/Cristina-Elena/Desktop/typescript/rrts/src/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\ninterface AppProps {\r\n  color?: string\r\n}\r\n\r\n/* interface AppState {\r\n  counter: number;\r\n} */\r\n\r\nconst App = (props: AppProps): JSX.Element => { // functional component / a function actually\r\n   return <div>{props.color}</div>;\r\n}\r\n\r\n//class App extends React.Component<AppProps> {\r\n  // two ways of definind 'state':\r\n  //1 - redefining the prop that is already set up in the class Component\r\n  // state = { counter: 0 };  // with es25\r\n\r\n   //2: defining the constructor\r\n/*   constructor(props: AppProps){\r\n       super(props);\r\n       this.state = { counter: 0 };\r\n   } */\r\n\r\n  // error functions bc as event handlers, these fctn are bound\r\n /*  onIncrement = (): void => {\r\n    this.setState({ counter: this.state.counter + 1});\r\n  };\r\n  onDecrement = (): void => {\r\n    this.setState({ counter: this.state.counter - 1});\r\n  }; */\r\n  /* render() {  \r\n    return (\r\n      <div>\r\n        <button onClick = {this.onIncrement}>increment</button>\r\n        <button onClick = {this.onDecrement}>decrement</button>\r\n        {this.state.counter} \r\n      </div>\r\n    )\r\n  }  */\r\n//}\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.querySelector('#root')\r\n);\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAMA;AACA;AACA;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAkC;EAAE;EAC7C,oBAAO;IAAA,UAAMA,KAAK,CAACC;EAAZ;IAAA;IAAA;IAAA;EAAA,QAAP;AACF,CAFD,C,CAIA;AACE;AACA;AACA;AAEC;;AACH;AACA;AACA;AACA;AAEE;;AACD;AACD;AACA;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA/BMF,G;AAiCND,QAAQ,CAACI,MAAT,eACE,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFF"},"metadata":{},"sourceType":"module"}